<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="playlistFolder">

	
	<!-- <select id="" parameterType="" resultType="">
	 	<![CDATA[
	
		]]>
	</select> -->
	
	<!-- 해당 플리 서평리스트 -->
	<!--  
	<select id="reviewList" parameterType="map" resultType="PlaylistFolderVo">
	 	<![CDATA[
			select lst.rn rn,
			       lst.playlistName playlistName,
			       lst.playlistNo playlistNo,
			       lst.reviewNo reviewNo,
			       lst.nickname nickname,
			       lst.userNo userNo,
			       lst.bookNo bookNo,
			       lst.reviewContent reviewContent,
			       lst.reviewDate reviewDate,
			       lst.styleNo styleNo,
			       lst.bookTitle bookTitle,
			       lst.emoName emoName,
			       lst.playlistDate playlistDate,
			       NVL(lst.likecnt,0) likecnt
			from(select rownum rn,
			            rnt.playlistName playlistName,
			            rnt.playlistNo playlistNo,
			            rnt.reviewNo reviewNo,
			            rnt.nickname nickname,
			            rnt.userNo userNo,
			            rnt.bookNo bookNo,
			            rnt.reviewContent reviewContent,
			            rnt.reviewDate reviewDate,
			            rnt.styleNo styleNo,
			            rnt.bookTitle bookTitle,
			            rnt.emoName emoName,
			            rnt.playlistDate playlistDate,
			            rnt.likecnt likecnt
			    from (select  nt.playlistName playlistName,
			                  nt.playlistNo playlistNo,
			                  nt.reviewNo reviewNo,
			                  nt.nickname nickname,
			                  nt.userNo userNo,
			                  nt.bookNo bookNo,
			                  nt.reviewContent reviewContent,
			                  nt.reviewDate reviewDate,
			                  nt.styleNo styleNo,
			                  nt.bookTitle bookTitle,
			                  nt.emoName emoName,
			                  nt.playlistDate playlistDate,
			                  nt.likecnt likecnt
			            from (select r.playlist_name playlistName,
			                         r.playlist_no playlistNo,
			                         r.review_no reviewNo,
			                         r.nickname nickname,
			                         r.user_no userNo,
			                         r.book_no bookNo,
			                         r.review_content reviewContent,
			                         to_char(r.review_date,'yyyy-mm-dd') reviewDate,
			                         r.style_no styleNo,
			                         b.book_title bookTitle,
			                         e.emo_name emoName,
			                         r.playlist_review_date playlistDate,
			                         lc.likecnt likecnt
			                    from (select p.playlist_name,
			                                 p.playlist_no,
			                                 r.review_no,
			                                 u.nickname,
			                                 u.user_no,
			                                 r.book_no,
			                                 r.review_content,
			                                 r.review_date,
			                                 r.style_no,
			                                 pr.playlist_review_date
			                            from playlist p, playlist_review pr, review r, users u
			                            where p.playlist_no = pr.playlist_no
			                            and pr.review_no = r.review_no
			                            and u.user_no = r.user_no) r, books b,style s, emotion e, (select  review_no,
			                                                                                                count(review_no) likecnt
			                                                                                        from review_user
			                                                                                        group by review_no) lc
			                    where b.book_no = r.book_no
			                    and r.style_no = s.style_no
			                    and s.emo_no = e.emo_no
			                    and lc.review_no(+) = r.review_no
			                    and r.playlist_no = #{playlistNo}
			                    order by r.playlist_review_date desc) nt) rnt) lst
			where rn >= #{startRnum}
			and rn <= #{endRnum}
		]]>
	</select>
	-->
	
	<!-- 해당 플리 서평리스트2 -->
	<select id="reviewList2" parameterType="map" resultType="PlaylistFolderVo">
	 	<![CDATA[
			select rn,
			       review_no reviewNo,
			       playlist_no playlistNo,
			       likeCnt likecnt,
			       nickname nickname,
			       user_no userNo,
			       review_content reviewContent,
			       to_char(review_date,'yyyy-mm-dd') reviewDate,
			       book_title bookTitle,
			       book_no bookNo,
			       style_no styleNo,
			       emo_name emoName,
			       playlist_name playlistName,
			       playlist_date playlistDate  
			from(select rownum rn,
			           review_no,
			           playlist_no,
			           likeCnt,
			           nickname,
			           user_no,
			           review_content,
			           review_date,
			           book_title,
			           book_no,
			           style_no,
			           emo_name,
			           playlist_name,
			           playlist_date
			    from(select r.review_no,
			               pr.playlist_no,
			               NVL(lct.likeCtn, 0) likeCnt,
			               u.nickname,
			               u.user_no,
			               r.review_content,
			               r.review_date,
			               b.book_title,
			               b.book_no,
			               s.style_no,
			               e.emo_name,
			               p.playlist_name,
			               p.playlist_date
			        from users u, review r, books b, style s, emotion e, playlist_review pr, playlist p, (select review_no,
			                                                                                                     count(user_no) likeCtn
			                                                                                              from review_user
			                                                                                              group by review_no) lct
			        where u.user_no = r.user_no
			        and r.book_no = b.book_no
			        and r.style_no = s.style_no
			        and s.emo_no = e.emo_no
			        and pr.review_no = r.review_no
			        and pr.playlist_no = p.playlist_no
			        and r.review_no = lct.review_no(+)
			        and p.playlist_no = #{playlistNo}
			        order by review_date desc))
			where rn between #{startRnum} and #{endRnum}	
		]]>
	</select>
	
	<!-- 해당 플리 서평 카운트 -->
	<select id="folderReviewCnt" parameterType="int" resultType="int">
	 	<![CDATA[
			select count(review_no)
			from playlist_review
			where playlist_no = #{playlistNo}
		]]>
	</select>
	
	<!-- 해당 플리 커버(해당 플리의 유저) -->
	<select id="playlistCover" parameterType="map" resultType="PlaylistFolderVo">
	 	<![CDATA[
			select  p.playlist_no playlistNo,
			        p.playlist_name playlistName,
			        u.user_no userNo,
			        u.nickname nickname
			from playlist p, users u
			where p.user_no = u.user_no
			and playlist_no = #{playlistNo}
		]]>
	</select>
	
	<!-- alreadyLiked -->
	<select id="checkAlreadyLiked" parameterType="PlaylistFolderVo" resultType="int">
	 	<![CDATA[
			select count(*)
			from review_user
			where review_no = #{reviewNo}
			and user_no = #{userNo}	
		]]>
	</select>
	
	<!-- 모달>서평 리스트 (오류: 서평이 중복되서 나옴)-->
	<!-- 
	<select id="modalPage" parameterType="map" resultType="PlaylistFolderVo">
	 	<![CDATA[	
			select se.rn rn,
			       se.reviewNo reviewNo,
			       se.userNo userNo,
			       se.bookNo bookNo,
			       se.styleNo styleNo,
			       se.reviewContent reviewContent,
			       se.reviewDate reviewDate,
			       se.emoName emoName,
			       se.bookTitle bookTitle,
			       se.playlistNo playlistNo
			from (select rownum rn,
			             fr.reviewNo,
			             fr.userNo,
			             fr.bookNo,
			             fr.styleNo,
			             fr.reviewContent,
			             fr.reviewDate,
			             fr.emoName,
			             fr.bookTitle,
			             fr.playlistNo
			        from (select  r.review_no reviewNo,
			                      r.user_no userNo,
			                      r.book_no bookNo,
			                      r.style_no styleNo,
			                      r.review_content reviewContent,
			                      r.review_date reviewDate,
			                      e.emo_name emoName,
			                      b.book_title bookTitle,
			                      pr.playlist_no playlistNo
			              from review r, style s, emotion e, books b, playlist_review pr
			              where r.style_no = s.style_no
			              and s.emo_no = e.emo_no
			              and b.book_no = r.book_no
			              and r.review_no = pr.review_no
			              order by review_date desc) fr) se
			where rn >= #{startRnum}
			and rn <= #{endRnum}
	
		]]>
	</select>
	 -->
	
	<!-- 모달>서평 리스트 (오류: 플리에 추가된 서평이 나옴) -->
	<!--  
	<select id="modalPage2" parameterType="map" resultType="PlaylistFolderVo">
		<![CDATA[
			select review_no reviewNo,
			       review_content reviewContent,
			       book_no bookNo,
			       review_date reviewDate,
			       emo_name emoName,
			       user_no userNo,
			       style_no styleNo,
			       book_title bookTitle
			from(select rownum rn,
			           review_no,
			           review_content,
			           book_no,
			           review_date,
			           emo_name,
			           user_no,
			           style_no,
			           book_title
			    from(select r.review_no,
			               r.review_content,
			               r.book_no,
			               r.review_date,
			               e.emo_name,
			               r.user_no,
			               r.style_no,
			               b.book_title
			        from review r, books b, style s, emotion e, users u
			        where r.book_no = b.book_no
			        and r.style_no = s.style_no
			        and s.emo_no = e.emo_no
			        and r.user_no = u.user_no
			        order by review_date desc))
			where rn between #{startRnum} and #{endRnum}		
		]]>
	</select>
	-->
	
	<!-- 모달>서평 리스트 (오류: 플리에 속한 서평 제외가 안됐음) -->
	<!--  
	<select id="modalPage3" parameterType="map" resultType="PlaylistFolderVo">
		<![CDATA[
			select review_no reviewNo,
			       review_content reviewContent,
			       book_no bookNo,
			       review_date reviewDate,
			       emo_name emoName,
			       user_no userNo,
			       style_no styleNo,
			       book_title bookTitle
			from(select rownum rn,
			           review_no,
			           review_content,
			           book_no,
			           review_date,
			           emo_name,
			           user_no,
			           style_no,
			           book_title
			    from(select r.review_no,
			                   r.review_content,
			                   r.book_no,
			                   r.review_date,
			                   e.emo_name,
			                   r.user_no,
			                   r.style_no,
			                   b.book_title
			            from review r, books b, style s, emotion e, users u,(select pr.review_no
			                                                                 from playlist_review pr, playlist p
			                                                                 where pr.playlist_no = p.playlist_no
			                                                                 and not pr.playlist_no in #{playlistNo}
			                                                                 group by pr.review_no) t
			            where r.book_no = b.book_no
			            and r.style_no = s.style_no
			            and s.emo_no = e.emo_no
			            and r.user_no = u.user_no
			            and t.review_no = r.review_no
			            order by r.review_date desc))
			where rn between #{startRnum} and #{endRnum}		
		]]>
	</select>
	-->
	
	<!-- 모달>서평 리스트 -->
	<select id="modalPage4" parameterType="map" resultType="PlaylistFolderVo">
		<![CDATA[
			select review_no reviewNo,
			       review_content reviewContent,
			       book_no bookNo,
			       review_date reviewDate,
			       emo_name emoName,
			       user_no userNo,
			       style_no styleNo,
			       book_title bookTitle
			from(select rownum rn,
			           review_no,
			           review_content,
			           book_no,
			           review_date,
			           emo_name,
			           user_no,
			           style_no,
			           book_title
			    from(select r.review_no,
			                   r.review_content,
			                   r.book_no,
			                   r.review_date,
			                   e.emo_name,
			                   r.user_no,
			                   r.style_no,
			                   b.book_title
			            from review r, books b, style s, emotion e, users u,(select review_no
																			from playlist_review
																			where not review_no in (select review_no
																			                        from playlist_review
																			                        where playlist_no in #{playlistNo})
																			group by review_no) t
			            where r.book_no = b.book_no
			            and r.style_no = s.style_no
			            and s.emo_no = e.emo_no
			            and r.user_no = u.user_no
			            and t.review_no = r.review_no
			            order by r.review_date desc))
			where rn between #{startRnum} and #{endRnum}		
		]]>
	</select>
	
	<!-- 서평 전체 카운트 -->
	<select id="totalCnt" parameterType="int" resultType="int">
	 	<![CDATA[
			select count(*)
			from review r, books b, style s, emotion e, users u,(select review_no
			                                                    from playlist_review
			                                                    where not review_no in (select review_no
			                                                                            from playlist_review
			                                                                            where playlist_no in #{playlistNo})
			                                                    group by review_no) t
			where r.book_no = b.book_no
			and r.style_no = s.style_no
			and s.emo_no = e.emo_no
			and r.user_no = u.user_no
			and t.review_no = r.review_no
		]]>
	</select>
	
	<!-- 검색 결과의 총 수 -->
	<!--  
	<select id="totalCntSearchReview" parameterType="map" resultType="int">
		<![CDATA[
			select count(*)
			from review r, books b, style s, emotion e, users u,(select pr.review_no
			                                                     from playlist_review pr, playlist p
			                                                     where pr.playlist_no = p.playlist_no
			                                                     and not pr.playlist_no in #{playlistNo}
			                                                     group by pr.review_no) t
			where r.book_no = b.book_no
			and r.style_no = s.style_no
			and s.emo_no = e.emo_no
			and r.user_no = u.user_no
			and t.review_no = r.review_no
			and (r.review_content like '%'||#{search}||'%' 
			     or b.book_title like '%'||#{search}||'%'  
			     or e.emo_name like '%'||#{search}||'%'
			     )
		]]>
	</select>
	-->
	
	<select id="totalCntSearchReview2" parameterType="map" resultType="int">
		<![CDATA[	
			select count(*)
			from review r, books b, style s, emotion e, users u,(select review_no
			                                                    from playlist_review
			                                                    where not review_no in (select review_no
			                                                                            from playlist_review
			                                                                            where playlist_no in #{playlistNo})
			                                                    group by review_no) t
			where r.book_no = b.book_no
			and r.style_no = s.style_no
			and s.emo_no = e.emo_no
			and r.user_no = u.user_no
			and t.review_no = r.review_no
			and (r.review_content like '%'||#{search}||'%' 
			     or b.book_title like '%'||#{search}||'%'  
			     or e.emo_name like '%'||#{search}||'%'
			     )
		]]>
	</select>
	
	<!-- search reviews (페이징 + 해당 플리에 속한 서평 제외, 오류: 플리에 속한 서평들 제외 X) -->
	<!--  
	<select id="playlistSearch2" parameterType="map" resultType="PlaylistFolderVo">
		<![CDATA[
			select review_no reviewNo,
			       review_content reviewContent,
			       book_no bookNo,
			       review_date reviewDate,
			       emo_name emoName,
			       user_no userNo,
			       style_no styleNo,
			       book_title bookTitle
			from(select rownum rn,
			           review_no,
			           review_content,
			           book_no,
			           review_date,
			           emo_name,
			           user_no,
			           style_no,
			           book_title
			    from(select r.review_no,
			                   r.review_content,
			                   r.book_no,
			                   r.review_date,
			                   e.emo_name,
			                   r.user_no,
			                   r.style_no,
			                   b.book_title
			            from review r, books b, style s, emotion e, users u,(select pr.review_no
			                                                                 from playlist_review pr, playlist p
			                                                                 where pr.playlist_no = p.playlist_no
			                                                                 and not pr.playlist_no in #{playlistNo}
			                                                                 group by pr.review_no) t
			            where r.book_no = b.book_no
			            and r.style_no = s.style_no
			            and s.emo_no = e.emo_no
			            and r.user_no = u.user_no
			            and t.review_no = r.review_no
			            and (r.review_content like '%'||#{search}||'%' 
			                 or b.book_title like '%'||#{search}||'%'  
			                 or e.emo_name like '%'||#{search}||'%'
			                 )
			            order by r.review_date desc))
			where rn between #{startNum} and #{endNum}
						
		]]>
	</select>
	-->
	
	<!-- search reviews -->
	
	<select id="playlistSearch3" parameterType="map" resultType="PlaylistFolderVo">
		<![CDATA[
			select review_no reviewNo,
			       review_content reviewContent,
			       book_no bookNo,
			       review_date reviewDate,
			       emo_name emoName,
			       user_no userNo,
			       style_no styleNo,
			       book_title bookTitle
			from(select rownum rn,
			           review_no,
			           review_content,
			           book_no,
			           review_date,
			           emo_name,
			           user_no,
			           style_no,
			           book_title
			    from(select r.review_no,
			                   r.review_content,
			                   r.book_no,
			                   r.review_date,
			                   e.emo_name,
			                   r.user_no,
			                   r.style_no,
			                   b.book_title
			            from review r, books b, style s, emotion e, users u,(select review_no
			                                                                from playlist_review
			                                                                where not review_no in (select review_no
			                                                                                        from playlist_review
			                                                                                        where playlist_no in #{playlistNo})
			                                                                group by review_no) t
			            where r.book_no = b.book_no
			            and r.style_no = s.style_no
			            and s.emo_no = e.emo_no
			            and r.user_no = u.user_no
			            and t.review_no = r.review_no
			            and (r.review_content like '%'||#{search}||'%' 
			                 or b.book_title like '%'||#{search}||'%'  
			                 or e.emo_name like '%'||#{search}||'%'
			                 )
			            order by r.review_date desc))
			where rn between #{startNum} and #{endNum}			
		]]>
	</select>
	
	<!-- 선택 서평 추가등록 -->
	<select id="reviewsInsert" parameterType="PlaylistFolderVo" resultType="PlaylistFolderVo">
	 	<![CDATA[
			insert into playlist_review
			values(seq_playlist_review_no.nextval, 
									#{playlistNo}, 
									  #{reviewNo}, 
										 sysdate)
		]]>
	</select>
	
	<!-- 커버>플레이리스트 로딩시 좋아요 체크 -->
	<select id="checkPlyAlreadyLiked" parameterType="PlaylistFolderVo" resultType="int">
	 	<![CDATA[
			select count(*)
			from user_playlist
			where user_no = #{userNo}
			and playlist_no = #{playlistNo}
		]]>
	</select>
	
	<!-- 커버>플리 좋아요 취소 -->
	<delete id="playlistUnlike" parameterType="PlaylistFolderVo">
	 	<![CDATA[
			delete from user_playlist
			where user_no = #{userNo}
			and playlist_no = #{playlistNo}
		]]>
	</delete>
	
	<!-- 커버>해당 플리 좋아요 -->
	<insert id="playlistlike" parameterType="PlaylistFolderVo">
	 	<![CDATA[
			insert into user_playlist 
			values(seq_user_playlist_no.nextval,
								  	  #{userNo}, 
								  #{playlistNo})
		]]>
	</insert>
	
	<!-- 서평 삭제 -->
	<delete id="reviewDelete" parameterType="int">
	 	<![CDATA[
			delete from review
			where review_no = #{reviewNo}
		]]>
	</delete>
	
	<select id="toggleLikeReview" parameterType="map" resultType="int">
		<![CDATA[
			declare
			cnt number;
			
			begin 
			    select count(*) 
			    into cnt
			    from review_user 
			    where user_no = #{userNo} 
			    and review_no = #{reviewNo};
			
			    if cnt > 0 then
			        delete from review_user
			        where user_no = #{userNo}
			        and review_no = #{reviewNo};
			        
			        select count(*)
			        into cnt
			        from review_user
			        where user_no = #{userNo}
			        and review_no = #{reviewNo};			        
			    else
			        insert into review_user
			        values(seq_playlist_review_no.nextval, 
			               #{userNo}, 
			               #{reviewNo}, 
			               sysdate);
			               
			        select count(*)
			        into cnt
			        from review_user
			        where user_no = #{userNo}
			        and review_no = #{reviewNo};			               
			    end if;
			end;			
		]]>
	</select>
	
	<delete id="deleteReview" parameterType="map">
		<![CDATA[
			delete from playlist_review
			where playlist_no = #{playlistNo}
			and review_no = #{reviewNo}			
		]]>
	</delete>
</mapper>